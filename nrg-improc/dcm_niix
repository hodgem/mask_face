#!/bin/bash

if [ -z $2 ]; then
	echo "Usage: dcm_nii <dcm dir> <outroot> [options]"
	echo "options:"
	echo "	-d			delete orientation info"
	echo "	-m <name>		save standard space orientation matrix"
	echo "	-s			transform to standard space"
	exit 0
fi
inrt=$1
rtt=$2
rt=`basename $rtt`
rdir=${rtt%$rt}
if [ -z "$rdir" ]; then rdir=`pwd`; fi

if [ ! -d "$inrt" ]; then
	echo "dcm_nii ERROR: no input directory $inrt, exiting"
	exit -1
fi

mkdir -p "$rdir" &> /dev/null

if [ ! -d "$rdir" ]; then
	echo "dcm_nii ERROR: no directory/cannot create $rdir, exiting"
	exit -1
fi

pushd $rdir

args=( $* )
pres_orient=1
reor=0

for (( i=2; i<${#args[*]}; i++ )); do
	if [ "${args[i]}" == "-d" ]; then
		pres_orient=0
	fi	
	if [ "${args[i]}" == "-s" ]; then
		reor=1
	fi
	if [ "${args[i]}" == "-m" ]; then
		(( i++ ))
		mfile=${args[i]}
	fi
done
curdir=`pwd`
ref=`which dcm_nii`
ref=${ref%/dcm_nii}

mkdir -p ${rt}_nii

#ofile=$(find -name o*.nii)
#file=$(find -name [0-9]*.nii)

echo dcm2niix -o . -x i -m 1 -z n -f ${rt}_orig $inrt
dcm2niix -o . -x i -m 1 -z n -f ${rt}_orig $inrt

#echo dcm2nii -o . -m 1 -x n -f ${rt}_reor_dcm2nii $inrt
#dcm2nii -o . -m 1 -x n -f ${rt}_reor_dcm2nii $inrt

if (( reor == 1 )); then
	outfile=${rt}_orig
else
	outfile=${rt}_reor_dcm2nii
fi

if [ -n "$mfile" ]; then 
	if [ ! -f "${rt}_orig.nii" ]; then
		echo "ERROR: cannot find untransformed file, exiting"
		popd &> /dev/null; popd &> /dev/null
		exit -1
	fi
	echo fslreorient2std ${rt}_orig
	fslreorient2std ${rt}_orig > $curdir/$mfile
fi

if [ -z "${outfile}.nii" ]; then 
	echo "ERROR: cannot find output file, exiting"
	popd &> /dev/null; popd &> /dev/null
	exit -1
fi

if (( pres_orient == 0 )); then	fslorient -deleteorient ${rt}_orig; fi
#cp $outfile.nii ${rt}.nii
popd &> /dev/null


